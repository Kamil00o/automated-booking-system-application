spring.application.name=passenger-account-service
server.port=9000

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=passengerServiceGroup
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.topic.name=kafkaTopic
spring.kafka.topic-json.name=passengerDtoTopicJson

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.key-deserializer=org.apache.kafka.common.serialization.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.json.add.type.headers=false

logging.level.org.springframework=info

spring.h2.console.enabled=true

spring.config.import=optional:configserver:http://localhost:8595

eureka.client.serviceUrl.defaultZone=http://localhost:8575/eureka

spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true

spring.datasource.url=jdbc:postgresql://localhost:5432/booking_system_db
spring.datasource.username=laganowskikamil
spring.datasource.password=pracamagisterska


spring.jpa.hibernate.ddl-auto=update
hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect